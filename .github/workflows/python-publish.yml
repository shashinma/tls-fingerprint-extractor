# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload JA3 Session Extractor to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dpkt packaging
          pip install pytest pytest-cov

      - name: Run tests
        run: |
          python3 tests/quick_api_test.py
          python -m pytest tests/ -v

      - name: Run examples
        run: |
          python3 examples/simple_api_example.py --help || true

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: python-distributions
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: pypi
      url: https://pypi.org/project/ja3-session-extractor/

    steps:
      - name: Retrieve distributions
        uses: actions/download-artifact@v4
        with:
          name: python-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
